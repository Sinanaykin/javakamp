package kodlamaio.northwind.business.concretes;

import java.util.List;

import javax.naming.spi.DirStateFactory.Result;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import kodlamaio.northwind.business.abstracts.ProductService;
import kodlamaio.northwind.core.utilities.results.DataResult;
import kodlamaio.northwind.core.utilities.results.SuccessDataResult;
import kodlamaio.northwind.core.utilities.results.SuccessResult;
import kodlamaio.northwind.dataAccess.abstracts.ProductDao;
import kodlamaio.northwind.entities.concretes.Product;

@Service //ProductManager classının bu  projede Service görevi göreceğini Springe bildiriyoruz
public class ProductManager implements ProductService{
	
	private ProductDao productDao;
	@Autowired//Arka planda ProductDao nun instance si olabilecek bir sınıf üretiyor ve onu veriyor
	//ProductDao yu enjekte edicek ortamı verir bize.
	public ProductManager(ProductDao productDao) {
		super();
		this.productDao = productDao;
	}


	@Override
	public DataResult<List<Product>> getAll() {
		return new SuccessDataResult<List<Product>>(this.productDao.findAll(),"Data listelendi");//Geriye veri ve mesaj döndürdük zaten otomatik true geliyor SuccessDataResult  dolayı
			//ProductDao nun extend ettiği JpaRepository un hazır olusturduğu metodlar direk gelir burda
	}


	@Override
	public Result add(Product product) {
		this.productDao.save(product);//save JpaRepository içindeki hazır metotlardan
		return new SuccessResult("Ürün eklendi");
	}

}
